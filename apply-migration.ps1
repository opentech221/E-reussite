# Script PowerShell pour appliquer la migration de base de donn√©es
# Date: 2025-10-23
# Description: Applique la migration 20251023_fix_database_schema.sql

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  Migration Base de Donn√©es E-R√©ussite" -ForegroundColor Cyan
Write-Host "  Option 4: Correction du sch√©ma" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Chemin de la migration
$migrationFile = "supabase\migrations\20251023_fix_database_schema.sql"

# V√©rifier que le fichier existe
if (-Not (Test-Path $migrationFile)) {
    Write-Host "‚ùå Erreur: Fichier de migration introuvable!" -ForegroundColor Red
    Write-Host "   Chemin attendu: $migrationFile" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Fichier de migration trouv√©" -ForegroundColor Green
Write-Host ""

# Menu des options
Write-Host "Choisissez une m√©thode d'application:" -ForegroundColor Yellow
Write-Host ""
Write-Host "1. üåê Copier le SQL pour l'interface Supabase (RECOMMAND√â)" -ForegroundColor White
Write-Host "2. üöÄ Appliquer via Supabase CLI (supabase db push)" -ForegroundColor White
Write-Host "3. üìã Afficher le contenu de la migration" -ForegroundColor White
Write-Host "4. üìñ Ouvrir le README de migration" -ForegroundColor White
Write-Host "5. ‚ùå Annuler" -ForegroundColor White
Write-Host ""

$choice = Read-Host "Votre choix (1-5)"

switch ($choice) {
    "1" {
        Write-Host ""
        Write-Host "üìã Copie du SQL dans le presse-papiers..." -ForegroundColor Cyan
        
        # Lire et copier le contenu
        $sql = Get-Content $migrationFile -Raw
        Set-Clipboard -Value $sql
        
        Write-Host "‚úÖ SQL copi√© dans le presse-papiers!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìù Prochaines √©tapes:" -ForegroundColor Yellow
        Write-Host "   1. Ouvrez https://supabase.com/dashboard" -ForegroundColor White
        Write-Host "   2. S√©lectionnez votre projet E-r√©ussite" -ForegroundColor White
        Write-Host "   3. Allez dans SQL Editor ‚Üí New Query" -ForegroundColor White
        Write-Host "   4. Collez le SQL (Ctrl+V)" -ForegroundColor White
        Write-Host "   5. Cliquez sur Run (Ctrl+Enter)" -ForegroundColor White
        Write-Host ""
        
        # Proposer d'ouvrir le navigateur
        $openBrowser = Read-Host "Ouvrir Supabase Dashboard maintenant? (O/n)"
        if ($openBrowser -ne "n") {
            Start-Process "https://supabase.com/dashboard"
            Write-Host "‚úÖ Navigateur ouvert!" -ForegroundColor Green
        }
    }
    
    "2" {
        Write-Host ""
        Write-Host "üöÄ Application via Supabase CLI..." -ForegroundColor Cyan
        Write-Host ""
        
        # V√©rifier que Supabase CLI est install√©
        try {
            $version = supabase --version 2>&1
            Write-Host "‚úÖ Supabase CLI d√©tect√©: $version" -ForegroundColor Green
        }
        catch {
            Write-Host "‚ùå Erreur: Supabase CLI non install√©!" -ForegroundColor Red
            Write-Host "   Installez-le avec: scoop install supabase" -ForegroundColor Yellow
            exit 1
        }
        
        Write-Host ""
        $confirm = Read-Host "‚ö†Ô∏è  √ätes-vous s√ªr de vouloir appliquer la migration? (oui/non)"
        
        if ($confirm -eq "oui") {
            Write-Host ""
            Write-Host "üì° Connexion √† la base de donn√©es..." -ForegroundColor Cyan
            
            # Appliquer la migration
            supabase db push
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host ""
                Write-Host "‚úÖ Migration appliqu√©e avec succ√®s!" -ForegroundColor Green
                Write-Host ""
                Write-Host "üéØ Prochaines √©tapes:" -ForegroundColor Yellow
                Write-Host "   1. V√©rifiez les logs Supabase pour les erreurs" -ForegroundColor White
                Write-Host "   2. Testez les pages Analytics et Dashboard" -ForegroundColor White
                Write-Host "   3. Consultez MIGRATION_20251023_README.md pour les v√©rifications" -ForegroundColor White
            }
            else {
                Write-Host ""
                Write-Host "‚ùå Erreur lors de l'application de la migration!" -ForegroundColor Red
                Write-Host "   Consultez les logs ci-dessus pour plus de d√©tails" -ForegroundColor Yellow
                Write-Host "   Essayez l'option 1 (interface Supabase) comme alternative" -ForegroundColor Yellow
            }
        }
        else {
            Write-Host "‚ùå Migration annul√©e" -ForegroundColor Yellow
        }
    }
    
    "3" {
        Write-Host ""
        Write-Host "üìÑ Contenu de la migration:" -ForegroundColor Cyan
        Write-Host "========================================" -ForegroundColor Gray
        Get-Content $migrationFile | Write-Host -ForegroundColor White
        Write-Host "========================================" -ForegroundColor Gray
    }
    
    "4" {
        Write-Host ""
        Write-Host "üìñ Ouverture du README..." -ForegroundColor Cyan
        
        if (Test-Path "MIGRATION_20251023_README.md") {
            Start-Process "MIGRATION_20251023_README.md"
            Write-Host "‚úÖ README ouvert!" -ForegroundColor Green
        }
        else {
            Write-Host "‚ùå README introuvable!" -ForegroundColor Red
        }
    }
    
    "5" {
        Write-Host ""
        Write-Host "‚ùå Op√©ration annul√©e" -ForegroundColor Yellow
        exit 0
    }
    
    default {
        Write-Host ""
        Write-Host "‚ùå Choix invalide!" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  Script termin√©" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
