-- ============================================================================
-- NETTOYAGE COMPLET RLS - Suppression de TOUS les doublons
-- Date: 10 octobre 2025
-- Probl√®me: Doublons cr√©√©s (8 politiques au lieu de 4)
-- ============================================================================

-- ============================================================================
-- √âTAPE 1: SUPPRIMER ABSOLUMENT TOUTES LES POLITIQUES
-- ============================================================================

-- M√©thode radicale: supprimer toutes les politiques existantes sur profiles
DO $$
DECLARE
    pol record;
BEGIN
    FOR pol IN 
        SELECT policyname 
        FROM pg_policies 
        WHERE schemaname = 'public' AND tablename = 'profiles'
    LOOP
        EXECUTE format('DROP POLICY IF EXISTS %I ON profiles', pol.policyname);
        RAISE NOTICE 'Supprim√©: %', pol.policyname;
    END LOOP;
END $$;

-- M√©thode radicale: supprimer toutes les politiques existantes sur user_points
DO $$
DECLARE
    pol record;
BEGIN
    FOR pol IN 
        SELECT policyname 
        FROM pg_policies 
        WHERE schemaname = 'public' AND tablename = 'user_points'
    LOOP
        EXECUTE format('DROP POLICY IF EXISTS %I ON user_points', pol.policyname);
        RAISE NOTICE 'Supprim√©: %', pol.policyname;
    END LOOP;
END $$;

-- V√©rification: devrait afficher 0 politiques
SELECT 
    tablename,
    COUNT(*) as nombre_politiques
FROM pg_policies
WHERE tablename IN ('profiles', 'user_points')
GROUP BY tablename;

-- Si cette requ√™te ne retourne rien, c'est parfait (0 politiques)

-- ============================================================================
-- √âTAPE 2: RECR√âER LES 4 POLITIQUES SUR profiles
-- ============================================================================

-- Politique 1: SELECT - Lecture publique
CREATE POLICY "Anyone can view profiles"
ON profiles
FOR SELECT
USING (true);

-- Politique 2: INSERT - Syst√®me uniquement (pour trigger)
CREATE POLICY "System can create profiles"
ON profiles
FOR INSERT
WITH CHECK (true);

-- Politique 3: UPDATE - Propri√©taire uniquement
CREATE POLICY "Users can update own profile"
ON profiles
FOR UPDATE
USING (auth.uid() = id)
WITH CHECK (auth.uid() = id);

-- Politique 4: DELETE - Interdit
CREATE POLICY "No one can delete profiles"
ON profiles
FOR DELETE
USING (false);

-- ============================================================================
-- √âTAPE 3: RECR√âER LES 4 POLITIQUES SUR user_points
-- ============================================================================

-- Politique 1: SELECT - Lecture publique (pour leaderboard)
CREATE POLICY "Anyone can view points"
ON user_points
FOR SELECT
USING (true);

-- Politique 2: INSERT - Syst√®me uniquement
CREATE POLICY "System can create points"
ON user_points
FOR INSERT
WITH CHECK (true);

-- Politique 3: UPDATE - Syst√®me uniquement via fonctions
CREATE POLICY "System can update points"
ON user_points
FOR UPDATE
USING (true)
WITH CHECK (true);

-- Politique 4: DELETE - Interdit
CREATE POLICY "No one can delete points"
ON user_points
FOR DELETE
USING (false);

-- ============================================================================
-- √âTAPE 4: V√âRIFICATION FINALE (DOIT MONTRER EXACTEMENT 4 PAR TABLE)
-- ============================================================================

-- Compter les politiques
SELECT 
    tablename,
    COUNT(*) as nombre_politiques,
    CASE 
        WHEN COUNT(*) = 4 THEN '‚úÖ PARFAIT'
        WHEN COUNT(*) > 4 THEN '‚ùå ENCORE DES DOUBLONS'
        WHEN COUNT(*) < 4 THEN '‚ùå POLITIQUES MANQUANTES'
    END as status
FROM pg_policies
WHERE tablename IN ('profiles', 'user_points')
GROUP BY tablename
ORDER BY tablename;

-- D√©tails des politiques (doit montrer exactement 4 par table)
SELECT 
    tablename,
    policyname,
    cmd as operation
FROM pg_policies
WHERE tablename IN ('profiles', 'user_points')
ORDER BY tablename, cmd, policyname;

-- V√©rifier qu'il n'y a AUCUN doublon
SELECT 
    tablename,
    cmd,
    COUNT(*) as nombre,
    CASE 
        WHEN COUNT(*) = 1 THEN '‚úÖ OK'
        ELSE '‚ùå DOUBLON ENCORE PR√âSENT'
    END as status
FROM pg_policies
WHERE tablename IN ('profiles', 'user_points')
GROUP BY tablename, cmd
ORDER BY tablename, cmd;

-- Si cette derni√®re requ√™te ne retourne rien ou uniquement des "‚úÖ OK", 
-- alors c'est parfait!

-- ============================================================================
-- MESSAGES DE SUCC√àS
-- ============================================================================

SELECT 'üéâ NETTOYAGE TERMIN√â!' as message;
SELECT '‚úÖ profiles: 4 politiques cr√©√©es' as status_profiles;
SELECT '‚úÖ user_points: 4 politiques cr√©√©es' as status_user_points;
SELECT 'üß™ Testez maintenant une inscription en navigation priv√©e' as prochaine_etape;
