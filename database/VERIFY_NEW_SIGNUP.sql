-- ============================================================================
-- V√âRIFICATION DES NOUVELLES INSCRIPTIONS
-- Date: 10 octobre 2025
-- Usage: Ex√©cuter apr√®s avoir cr√©√© un compte test
-- ============================================================================

-- ============================================================================
-- 1. V√âRIFIER LES UTILISATEURS R√âCENTS (derni√®res 10 minutes)
-- ============================================================================

SELECT 
    au.id,
    au.email,
    au.created_at,
    CASE WHEN au.email_confirmed_at IS NOT NULL THEN '‚úÖ' ELSE '‚ùå' END as email_confirm√©,
    CASE WHEN p.id IS NOT NULL THEN '‚úÖ' ELSE '‚ùå' END as profil_existe,
    CASE WHEN up.user_id IS NOT NULL THEN '‚úÖ' ELSE '‚ùå' END as points_existent,
    p.full_name,
    up.total_points,
    up.level,
    EXTRACT(EPOCH FROM (NOW() - au.created_at)) as secondes_depuis_creation
FROM auth.users au
LEFT JOIN profiles p ON p.id = au.id
LEFT JOIN user_points up ON up.user_id = au.id
WHERE au.created_at > NOW() - INTERVAL '10 minutes'
ORDER BY au.created_at DESC;

-- ============================================================================
-- 2. VOIR LES LOGS DU TRIGGER (si disponibles)
-- ============================================================================

-- Note: Cette requ√™te n√©cessite pg_stat_statements ou pgaudit
-- Si vous ne voyez rien, allez dans Supabase Dashboard ‚Üí Logs ‚Üí Postgres Logs

/*
SELECT * FROM pg_stat_activity 
WHERE query LIKE '%handle_new_user%' 
ORDER BY query_start DESC 
LIMIT 5;
*/

-- ============================================================================
-- 3. COMPTER TOUS LES UTILISATEURS ET LEUR √âTAT
-- ============================================================================

SELECT 
    COUNT(*) as total_users,
    COUNT(CASE WHEN email_confirmed_at IS NOT NULL THEN 1 END) as users_confirm√©s,
    COUNT(CASE WHEN email_confirmed_at IS NULL THEN 1 END) as users_non_confirm√©s
FROM auth.users;

SELECT 
    'Profils' as table_name,
    COUNT(*) as total_records
FROM profiles
UNION ALL
SELECT 
    'User Points' as table_name,
    COUNT(*) as total_records
FROM user_points
UNION ALL
SELECT 
    'Auth Users' as table_name,
    COUNT(*) as total_records
FROM auth.users;

-- ============================================================================
-- 4. V√âRIFIER L'INT√âGRIT√â (user sans profil ou points)
-- ============================================================================

-- Utilisateurs SANS profil (‚ùå probl√®me)
SELECT 
    au.id,
    au.email,
    au.created_at,
    '‚ùå Pas de profil' as probleme
FROM auth.users au
LEFT JOIN profiles p ON p.id = au.id
WHERE p.id IS NULL
ORDER BY au.created_at DESC;

-- Utilisateurs SANS points (‚ùå probl√®me)
SELECT 
    au.id,
    au.email,
    au.created_at,
    '‚ùå Pas de points' as probleme
FROM auth.users au
LEFT JOIN user_points up ON up.user_id = au.id
WHERE up.user_id IS NULL
ORDER BY au.created_at DESC;

-- ============================================================================
-- 5. √âTAT DU TRIGGER
-- ============================================================================

SELECT 
    t.tgname as trigger_name,
    t.tgenabled as enabled,
    CASE t.tgenabled
        WHEN 'O' THEN '‚úÖ Activ√©'
        WHEN 'D' THEN '‚ùå D√©sactiv√©'
        ELSE '‚ö†Ô∏è Autre statut'
    END as status,
    p.proname as function_name,
    p.prosecdef as security_definer,
    CASE p.prosecdef
        WHEN true THEN '‚úÖ SECURITY DEFINER'
        ELSE '‚ùå Pas SECURITY DEFINER'
    END as security_status
FROM pg_trigger t
JOIN pg_proc p ON p.oid = t.tgfoid
WHERE t.tgname = 'on_auth_user_created';

-- ============================================================================
-- MESSAGES D'AIDE
-- ============================================================================

SELECT '‚úÖ Si le nouveau compte test a ‚úÖ‚úÖ (profil + points), le trigger fonctionne !' as resultat_attendu;
SELECT '‚ùå Si le nouveau compte a ‚ùå (profil ou points manquant), v√©rifiez les logs Postgres' as si_probleme;
SELECT 'üîç Supabase Dashboard ‚Üí Logs ‚Üí Postgres Logs ‚Üí Chercher "handle_new_user"' as ou_voir_logs;
