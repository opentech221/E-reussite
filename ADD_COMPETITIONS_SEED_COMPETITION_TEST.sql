-- =============================================
-- SEED COMP√âTITION DE TEST
-- Cr√©ation d'une premi√®re comp√©tition d'exemple
-- =============================================

-- NOTE : Ce script cr√©e une comp√©tition de test active
-- pour valider le syst√®me de comp√©titions MVP Phase 1

DO $$
DECLARE
    competition_id UUID;
    question_ids UUID[];
    question_record RECORD;
    order_idx INTEGER := 1;
BEGIN
    -- ============================================================
    -- √âTAPE 1 : Cr√©er une comp√©tition de test
    -- ============================================================
    
    INSERT INTO competitions (
        title,
        description,
        type,
        subject,
        grade_level,
        difficulty,
        duration_minutes,
        questions_count,
        status,
        starts_at,
        ends_at,
        reward_points,
        reward_xp,
        reward_badges,
        max_participants
    ) VALUES (
        'üèÜ Challenge Math√©matiques - Octobre 2025',
        'Comp√©tition de math√©matiques niveau coll√®ge/lyc√©e. Testez vos connaissances sur le th√©or√®me de Thal√®s, les √©quations du second degr√© et les fonctions ! Top 3 gagnent des badges exclusifs.',
        'asynchronous',
        'mathematiques',
        'troisieme',
        'moyen',
        15, -- 15 minutes
        10, -- 10 questions
        'active', -- Actif maintenant
        NOW(), -- Commence maintenant
        NOW() + INTERVAL '7 days', -- Se termine dans 7 jours
        500, -- 500 points de r√©compense
        100, -- 100 XP
        '["champion_maths", "top_competitor"]'::jsonb,
        NULL -- Participants illimit√©s
    )
    RETURNING id INTO competition_id;
    
    RAISE NOTICE '‚úÖ Comp√©tition cr√©√©e avec ID: %', competition_id;
    
    -- ============================================================
    -- √âTAPE 2 : S√©lectionner 10 questions de math√©matiques
    -- ============================================================
    
    -- S√©lectionner 10 questions de math√©matiques (mix de difficult√©s)
    FOR question_record IN (
        SELECT id 
        FROM questions 
        WHERE subject = 'mathematiques'
        ORDER BY RANDOM()
        LIMIT 10
    )
    LOOP
        INSERT INTO competition_questions (
            competition_id,
            question_id,
            order_index,
            points
        ) VALUES (
            competition_id,
            question_record.id,
            order_idx,
            10 -- 10 points par question
        );
        
        order_idx := order_idx + 1;
    END LOOP;
    
    RAISE NOTICE '‚úÖ % questions ajout√©es √† la comp√©tition', order_idx - 1;
    
    -- ============================================================
    -- √âTAPE 3 : Cr√©er une deuxi√®me comp√©tition (upcoming)
    -- ============================================================
    
    INSERT INTO competitions (
        title,
        description,
        type,
        subject,
        grade_level,
        difficulty,
        duration_minutes,
        questions_count,
        status,
        starts_at,
        ends_at,
        reward_points,
        reward_xp,
        reward_badges,
        max_participants
    ) VALUES (
        'üåç Quiz Sciences & Vie - Novembre 2025',
        'Comp√©tition multi-mati√®res : SVT, Physique-Chimie et G√©ographie. Parfait pour les passionn√©s de sciences ! R√©compenses exclusives pour le top 10.',
        'asynchronous',
        'sciences',
        'seconde',
        'moyen',
        20, -- 20 minutes
        15, -- 15 questions
        'upcoming', -- √Ä venir
        NOW() + INTERVAL '3 days', -- Commence dans 3 jours
        NOW() + INTERVAL '10 days', -- Se termine dans 10 jours
        750, -- 750 points
        150, -- 150 XP
        '["science_master", "top_10"]'::jsonb,
        100 -- Max 100 participants
    )
    RETURNING id INTO competition_id;
    
    RAISE NOTICE '‚úÖ Deuxi√®me comp√©tition cr√©√©e avec ID: %', competition_id;
    
    -- S√©lectionner 15 questions de sciences (m√©lange SVT + Physique + G√©o)
    order_idx := 1;
    
    FOR question_record IN (
        SELECT id 
        FROM questions 
        WHERE subject IN ('sciences', 'physique_chimie', 'geographie')
        ORDER BY RANDOM()
        LIMIT 15
    )
    LOOP
        INSERT INTO competition_questions (
            competition_id,
            question_id,
            order_index,
            points
        ) VALUES (
            competition_id,
            question_record.id,
            order_idx,
            10
        );
        
        order_idx := order_idx + 1;
    END LOOP;
    
    RAISE NOTICE '‚úÖ % questions ajout√©es √† la deuxi√®me comp√©tition', order_idx - 1;
    
    -- ============================================================
    -- √âTAPE 4 : Cr√©er une troisi√®me comp√©tition (difficile)
    -- ============================================================
    
    INSERT INTO competitions (
        title,
        description,
        type,
        subject,
        grade_level,
        difficulty,
        duration_minutes,
        questions_count,
        status,
        starts_at,
        ends_at,
        reward_points,
        reward_xp,
        reward_badges,
        max_participants
    ) VALUES (
        'üî• D√©fi Expert - Toutes Mati√®res',
        'La comp√©tition ultime ! Questions difficiles de toutes les mati√®res. R√©serv√© aux plus courageux. Badge l√©gendaire "Expert Champion" pour le premier !',
        'asynchronous',
        'multidisciplinaire',
        'terminale',
        'difficile',
        30, -- 30 minutes
        20, -- 20 questions
        'active', -- Actif maintenant
        NOW(),
        NOW() + INTERVAL '14 days', -- 2 semaines
        1000, -- 1000 points !
        250, -- 250 XP
        '["expert_champion", "legendary_competitor", "master_mind"]'::jsonb,
        50 -- Max 50 participants
    )
    RETURNING id INTO competition_id;
    
    RAISE NOTICE '‚úÖ Troisi√®me comp√©tition (Expert) cr√©√©e avec ID: %', competition_id;
    
    -- S√©lectionner 20 questions de toutes mati√®res (priorit√© difficile)
    order_idx := 1;
    
    FOR question_record IN (
        SELECT id 
        FROM questions 
        WHERE difficulty IN ('difficile', 'moyen')
        ORDER BY 
            CASE WHEN difficulty = 'difficile' THEN 1 ELSE 2 END,
            RANDOM()
        LIMIT 20
    )
    LOOP
        INSERT INTO competition_questions (
            competition_id,
            question_id,
            order_index,
            points
        ) VALUES (
            competition_id,
            question_record.id,
            order_idx,
            15 -- 15 points par question (plus difficile)
        );
        
        order_idx := order_idx + 1;
    END LOOP;
    
    RAISE NOTICE '‚úÖ % questions ajout√©es √† la comp√©tition Expert', order_idx - 1;
    
    -- ============================================================
    -- AFFICHAGE FINAL
    -- ============================================================
    
    RAISE NOTICE '';
    RAISE NOTICE '‚úÖ =============================================';
    RAISE NOTICE '‚úÖ SEED COMP√âTITIONS TERMIN√â AVEC SUCC√àS';
    RAISE NOTICE '‚úÖ =============================================';
    RAISE NOTICE '';
    RAISE NOTICE 'üèÜ COMP√âTITIONS CR√â√âES :';
    RAISE NOTICE '   1. Challenge Math√©matiques (ACTIF - 7 jours)';
    RAISE NOTICE '   2. Quiz Sciences & Vie (√Ä VENIR - dans 3 jours)';
    RAISE NOTICE '   3. D√©fi Expert (ACTIF - 14 jours)';
    RAISE NOTICE '';
    RAISE NOTICE 'üìä STATISTIQUES :';
    RAISE NOTICE '   ‚Ä¢ Total comp√©titions : %', (SELECT COUNT(*) FROM competitions);
    RAISE NOTICE '   ‚Ä¢ Comp√©titions actives : %', (SELECT COUNT(*) FROM competitions WHERE status = 'active');
    RAISE NOTICE '   ‚Ä¢ Total questions attribu√©es : %', (SELECT COUNT(*) FROM competition_questions);
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ PROCHAINE √âTAPE :';
    RAISE NOTICE '   ‚Üí Allez sur /competitions pour voir les comp√©titions';
    RAISE NOTICE '   ‚Üí Inscrivez-vous et testez le syst√®me !';
    RAISE NOTICE '';
    RAISE NOTICE '‚ú® Bon courage et que le meilleur gagne ! üèÜ';
    RAISE NOTICE '=============================================';
    
END $$;
