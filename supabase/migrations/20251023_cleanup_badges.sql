-- ============================================
-- Script de nettoyage : Corriger les badge_id malform√©s
-- Probl√®me: Les badge_id commencent par _ (underscore)
-- Exemple: _remier_as au lieu de premier_pas
-- ============================================

-- √âTAPE 1: Supprimer la colonne badge_id malform√©e
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'badges' AND column_name = 'badge_id'
    ) THEN
        ALTER TABLE badges 
        DROP COLUMN badge_id;
        
        RAISE NOTICE 'üóëÔ∏è  Colonne badge_id malform√©e supprim√©e';
    ELSE
        RAISE NOTICE '‚è≠Ô∏è  Aucune colonne badge_id √† supprimer';
    END IF;
END $$;

-- √âTAPE 2: R√©tablir la colonne badge_name dans user_badges si renomm√©e
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'user_badges' AND column_name = 'badge_id'
    ) AND NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'user_badges' AND column_name = 'badge_name'
    ) THEN
        ALTER TABLE user_badges 
        RENAME COLUMN badge_id TO badge_name;
        
        RAISE NOTICE 'üîÑ Colonne badge_id renomm√©e en badge_name';
    ELSE
        RAISE NOTICE '‚è≠Ô∏è  Colonne d√©j√† nomm√©e badge_name';
    END IF;
END $$;

-- √âTAPE 3: Supprimer la FK si elle existe
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'user_badges_badge_id_fkey'
    ) THEN
        ALTER TABLE user_badges 
        DROP CONSTRAINT user_badges_badge_id_fkey;
        
        RAISE NOTICE 'üóëÔ∏è  Foreign Key supprim√©e';
    ELSE
        RAISE NOTICE '‚è≠Ô∏è  Aucune FK √† supprimer';
    END IF;
END $$;

-- Rapport final
DO $$
DECLARE
    v_has_badge_id BOOLEAN;
    v_has_badge_name BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'badges' AND column_name = 'badge_id'
    ) INTO v_has_badge_id;
    
    SELECT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'user_badges' AND column_name = 'badge_name'
    ) INTO v_has_badge_name;
    
    RAISE NOTICE '';
    RAISE NOTICE '========================================';
    RAISE NOTICE '‚úÖ Nettoyage termin√©!';
    RAISE NOTICE '========================================';
    RAISE NOTICE 'badges.badge_id: %', CASE WHEN v_has_badge_id THEN '‚ùå Existe (probl√®me!)' ELSE '‚úÖ Supprim√©' END;
    RAISE NOTICE 'user_badges.badge_name: %', CASE WHEN v_has_badge_name THEN '‚úÖ R√©tabli' ELSE '‚ùå Absent' END;
    RAISE NOTICE '';
    RAISE NOTICE 'üëâ Vous pouvez maintenant r√©ex√©cuter la migration V2 corrig√©e';
    RAISE NOTICE '========================================';
END $$;
